Java Core-------------
  ->Static keyword
  ->interface/abstract
  ->Stream Api / Parallel stream
  ->CompareAble/Comparator
  ->Lambda functions
  ->AutoBoxing/UnBoxing
  ->UpCasting/DownCasting
  ->Functional interface
  ->Exception Handling / Checked Exceptions / Unchecked Exceptions
  ->multithreading


OOP---------------------
    Encapsulation
    Abstraction
    inheritance
    Polymorphism

DataStructure-----------
      ->Iterable interface
      ->Collection Interface
      ->Arrays
      ->ArrayList
      ->LinkedList
      ->Set
      ->Map
      ->HashTable

Network Programming--------
  ->Sockets
  ->Servlets

Spring----------------------
  ->Spring AOP
  ->Spring security
  ->Spring Boot
         ->Inversion of Control(IOC)
         ->Dependency Injection
  ->Spring Data
  ->Design Patterns


------------------------

hash map and hash table
keyword to make method thread safe
has a / is a relationship
string mutable example
stack memory and heap memory
Garbage collector
Memory leakage
multiple constructors
Clustering
Web.xml
math.random
triggers
indexing
Servlets


-----------------
Asynchronous programming
Java Generics
Java concurrency Api
Java stream api

High availability, High Scalability , high performance enterprise  architecture and  design
---------------------------------------------
How to avoid spaghetti design in application development.

-----------------------------------
wrapper design pattersns
java memory leak
design patterns

---------------------------------
infinite loop and stackoverflow error -> creating new instance inside the constructor

-------------------------------------------
composite key in database
------------------------------------------
